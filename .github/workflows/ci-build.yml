name: ci-build
on:
  push:
    branches:
      - main
    tags-ignore:
      - '*.*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
      debug_detached:
        description: 'Run tmate debugging in detached mode'
        required: false
        default: true

jobs:
  updatewebsite: ## TODO: move to its own workflow just for push to main (or even tags))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 2
      - name: Verify Changed files in docs
        id: verify-changed-files
        run: |
          if git diff --name-only HEAD~1 | grep '^docs/' > /dev/null; then
            echo "files_changed=true" >> $GITHUB_ENV
          else
            echo "files_changed=false" >> $GITHUB_ENV
          fi
      - name: update website
        if: ${{ github.ref == 'refs/heads/main' && env.files_changed == 'true' }}
        uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc # v1
        with:
          workflow: github-pages
          repo: jbangdev/jbang.dev
          token: ${{ secrets.BREW_GITHUB_TOKEN }}
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: ./.github/actions/shared-build-setup
      - name: check formatting and comment on PR if failed
        id: check-formatting
        run: ./gradlew spotlessCheck

  build-shared:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: ./.github/actions/shared-build-setup
      - name: build-with-no-tests
        run: ./gradlew --no-daemon clean build installDist publish -x test -x integrationTest --build-cache --scan -s
      - name: Upload jbang.zip
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: build-shared-jbang-${{ github.sha }}
          path: build/install/jbang
      - name: Upload build results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: build-shared-build-${{ github.sha }}
          path: build

  build-native-image:
    needs: build-shared
    strategy:
      fail-fast: false
      matrix:
        os: &os_matrix [ubuntu-latest,windows-latest,macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: ./.github/actions/shared-build-setup
      - name: setup-graalvm
        uses: graalvm/setup-graalvm@v1
        with:
            java-version: '25'      
            distribution: 'graalvm-community' # like to use mandrel but using community for now
            github-token: ${{ secrets.GITHUB_TOKEN }}
            set-java-home: false # we should not use graalvm for java builds (we need java 11)
            cache: gradle
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: build-shared-build-${{ github.sha }}
          path: build

      - name: build-native-image
        run: |
          ./gradlew nativeImage
      - name: upload-native-image
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build-native-image-jbang-cli-${{ matrix.os }}
          path: build/native-image/*
          if-no-files-found: error

  testing:
    needs: build-shared
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: *os_matrix
    name: tests
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 #
      - uses: ./.github/actions/shared-build-setup
      
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: build-shared-build-${{ github.sha }}
          path: build
      - name: test
        run: |
          ./gradlew test
      - name: integration-test
        run: |
          ./gradlew integrationTest
      - name: codecoverage-report
        run: |
          ./gradlew --no-daemon jacocoTestReport
      - name: allure report
        if: always() # always run even if the previous step fails
        run: |
          ./gradlew allureReport --clean
      - name: Upload Allure Test Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always() # always run even if the previous step fails
        with:
          name: testing-allure-report-${{ matrix.os }}
          path: 'build/reports/allure-report/allureReport/index.html'
          retention-days: 7
      - name: Upload Test Report for pr marking
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always() # always run even if the previous step fails
        with:
          name: testing-junit-test-results-${{ matrix.os }}
          path: 'build/test-results/test/TEST-*.xml'
          retention-days: 1
      - uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5
        with:
          #files: ./coverage1.xml,./coverage2.xml # optional
          flags: ${{ runner.os }} # optional
          name: ${{ runner.os }}-tests # optional
          verbose: true # optional (default = false)
      - name: build-choco-package
        if: runner.os == 'Windows'
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        with:
          dotnet-version: '2.2.204' # SDK Version to use.
      - name: build-choco
        if: runner.os == 'Windows'
        run: |
          powershell
          choco pack build/choco/jbang.nuspec
      - name: Archive build results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: testing-build-${{ runner.os }}-${{ github.sha }}
          path: build
      - name: Write out Unit Test report annotation for forked repo
        if: always()
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5
        with:
          report_paths: 'build/test-results/test/TEST-*.xml'
          annotate_only: true # forked repo cannot write to checks so just do annotations
      - name: Add artifact.ci links
        if: always()
        run: |
          echo "View [Allure Report](https://www.artifact.ci/artifact/view/${{ github.repository }}/run/${{ github.run_id }}.${{ github.run_attempt}}/allure-report-${{ matrix.os }}) [direct link (available after first view)](https://www.artifact.ci/artifact/view/${{ github.repository }}/run/${{ github.run_id }}.${{ github.run_attempt}}/allure-report-${{ matrix.os }}/build/reports/allure-report/allureReport/index.html) for ${{ matrix.os }} build" >> $GITHUB_STEP_SUMMARY
  
  test-native-image:
    needs: build-native-image
    strategy:
      fail-fast: false
      matrix:
        os: *os_matrix
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: ./.github/actions/shared-build-setup
      - name: download shared build
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: build-shared-build-${{ github.sha }}
          path: build

      - name: download jbang-cli 
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: build-native-image-jbang-cli-${{ matrix.os }}
          path: build/native-image
      - name: create install with jbang-cli
        run: |
          ./gradlew installDist
      - name: integration-test-native-image
        env:
          JBANG_USE_NATIVE: true
        run: |
          ./gradlew integrationTest
      - name: codecoverage-report
        run: |
            ./gradlew --no-daemon jacocoTestReport
      - name: allure report
        if: always() # always run even if the previous step fails
        run: |
          ./gradlew allureReport --clean
      - name: Upload Allure Test Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always() # always run even if the previous step fails
        with:
          name: test-native-image-allure-report-${{ matrix.os }}
          path: 'build/reports/allure-report/allureReport/index.html'
          retention-days: 7
      
  smoke-test:
    needs: build-shared
    strategy:
      ## disable fail-fast so on variance failing don't fail the rest
      #fail-fast: false
      matrix:
        os: [ubuntu-latest]
        java: [8,11,17,21]
    runs-on: ${{ matrix.os }}
    env:
      GRADLE_ACTIONS_SKIP_BUILD_RESULT_CAPTURE: true
      _JBANG_: ./build/install/jbang/bin/jbang
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: ./.github/actions/shared-build-setup
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: build-shared-build-${{ github.sha }}
          path: build
      - name: smoke-test
        run: |
          java -version
          chmod +x $_JBANG_
          $_JBANG_ init --template=cli helloworld.java
          $_JBANG_ --verbose helloworld.java
          rm helloworld.java
      - name: smoke-quarkus-test
        run: |
          java -version
          chmod +x $_JBANG_
          $_JBANG_ init --template=qcli qcli.java
          $_JBANG_ --fresh --verbose qcli.java
          rm qcli.java
      - name: smoke-quarkus-diff-version-test
        run: |
          java -version
          chmod +x $_JBANG_
          $_JBANG_ init --template=qcli qcli.java
          $_JBANG_ --fresh --verbose --java 17 qcli.java
          rm qcli.java
      - name: integration-test-non-windows
        if: runner.os != 'Windows'
        run: |
          export PATH=`pwd`/build/install/jbang/bin:$PATH
          cd build/itests
          chmod +x ./test_suite.sh
          ./test_suite.sh
