{
  "id" : "dc48d86b-4dce-4e77-9234-f40be8946bd0",
  "name" : "gists_590b8a0e824faeb3ee7ddfad741ce842",
  "request" : {
    "url" : "/gists/590b8a0e824faeb3ee7ddfad741ce842",
    "method" : "GET"
  },
  "response" : {
    "status" : 200,
    "body" : "{\"url\":\"https://api.github.com/gists/590b8a0e824faeb3ee7ddfad741ce842\",\"forks_url\":\"https://api.github.com/gists/590b8a0e824faeb3ee7ddfad741ce842/forks\",\"commits_url\":\"https://api.github.com/gists/590b8a0e824faeb3ee7ddfad741ce842/commits\",\"id\":\"590b8a0e824faeb3ee7ddfad741ce842\",\"node_id\":\"MDQ6R2lzdDU5MGI4YTBlODI0ZmFlYjNlZTdkZGZhZDc0MWNlODQy\",\"git_pull_url\":\"https://gist.github.com/590b8a0e824faeb3ee7ddfad741ce842.git\",\"git_push_url\":\"https://gist.github.com/590b8a0e824faeb3ee7ddfad741ce842.git\",\"html_url\":\"https://gist.github.com/maxandersen/590b8a0e824faeb3ee7ddfad741ce842\",\"files\":{\"checklabeler.java\":{\"filename\":\"checklabeler.java\",\"type\":\"text/x-java-source\",\"language\":\"Java\",\"raw_url\":\"https://gist.githubusercontent.com/maxandersen/590b8a0e824faeb3ee7ddfad741ce842/raw/69dfcd1ed69cce69363c920140512c808fd66a19/checklabeler.java\",\"size\":2896,\"truncated\":false,\"content\":\"//usr/bin/env jbang \\\"$0\\\" \\\"$@\\\" ; exit $?\\n//DEPS com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.2\\n//DEPS com.fasterxml.jackson.core:jackson-databind:2.10.2\\n//DEPS fr.opensagres.js:minimatch.java:1.1.0\\n//DEPS info.picocli:picocli:4.1.4\\n\\nimport java.io.File;\\nimport java.nio.file.Files;\\nimport java.nio.file.Path;\\nimport java.nio.file.Paths;\\nimport java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Map;\\nimport java.util.concurrent.Callable;\\nimport java.util.stream.Collectors;\\nimport static java.lang.System.*;\\n\\nimport com.fasterxml.jackson.databind.ObjectMapper;\\nimport com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\\n\\nimport minimatch.Minimatch;\\nimport picocli.CommandLine;\\nimport picocli.CommandLine.Command;\\nimport picocli.CommandLine.Option;\\nimport picocli.CommandLine.Parameters;\\nimport picocli.CommandLine.Help.Ansi;\\n\\n\\n@Command(description=\\\"Prints matching labels for directories found in folder. Useful to check how labeler will work.\\\")\\npublic class checklabeler implements Callable<Integer> {\\n\\n    @Parameters(index=\\\"0\\\", description=\\\"Path to .github/labeler.yml\\\")\\n    String yamlFile;\\n\\n    @Parameters(index=\\\"1\\\", defaultValue = \\\"\\\", description = \\\"Path to dump labels for\\\")\\n    String rootDir;\\n    \\n    @Option(names = \\\"--only-dirs\\\", description = \\\"If set, only print for directories\\\", defaultValue = \\\"false\\\")\\n    boolean onlyDirs;\\n\\n    @Option(names= \\\"--only-matches\\\", description = \\\"Print only matches\\\")\\n    boolean onlyMatches;\\n\\n    public static void main(String... args) {\\n        System.exit(new CommandLine(new checklabeler()).execute(args));\\n    }\\n\\n    private Map<String, List<String>> labelers;\\n\\n    List<String> findLabels(Path p) {\\n        var result = new ArrayList<String>();\\n        \\n        var item = labelers.entrySet().stream().filter(e -> match(p, e.getValue()))\\n        .map(x->x.getKey())\\n        .collect(Collectors.joining(\\\",\\\"));\\n\\n        result.add(item);\\n\\n        if(onlyMatches && item.isEmpty()) {\\n            // noop\\n        } else {\\n            out.println(Ansi.AUTO.string(p + \\\" @|bold,green,underline \\\" + result +\\\"|@\\\"));\\n        }\\n        \\n        return result;\\n    }\\n\\n    \\n    private static boolean match(Path p, List<String> value) {\\n        for (String pattern : value) {\\n            if(Minimatch.minimatch(p.toFile().getPath(), pattern)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n\\n    @SuppressWarnings(\\\"unchecked\\\")\\n    public Integer call() {\\n        var mapper = new ObjectMapper(new YAMLFactory());\\n        \\n        try {\\n            labelers = mapper.readValue(new File(yamlFile), Map.class);\\n\\n            //out.println(labelers);\\n\\n            Files.walk(Paths.get(rootDir)).filter(x -> onlyDirs?x.toFile().isDirectory():true).forEach(this::findLabels);\\n\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n            return -1;\\n        }\\n        return 0;\\n    }\\n}\",\"encoding\":\"utf-8\"}},\"public\":true,\"created_at\":\"2020-01-13T21:00:26Z\",\"updated_at\":\"2020-05-30T20:23:41Z\",\"description\":\"\",\"comments\":0,\"user\":null,\"comments_enabled\":true,\"comments_url\":\"https://api.github.com/gists/590b8a0e824faeb3ee7ddfad741ce842/comments\",\"owner\":{\"login\":\"maxandersen\",\"id\":54129,\"node_id\":\"MDQ6VXNlcjU0MTI5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/54129?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/maxandersen\",\"html_url\":\"https://github.com/maxandersen\",\"followers_url\":\"https://api.github.com/users/maxandersen/followers\",\"following_url\":\"https://api.github.com/users/maxandersen/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/maxandersen/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/maxandersen/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/maxandersen/subscriptions\",\"organizations_url\":\"https://api.github.com/users/maxandersen/orgs\",\"repos_url\":\"https://api.github.com/users/maxandersen/repos\",\"events_url\":\"https://api.github.com/users/maxandersen/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/maxandersen/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"forks\":[],\"history\":[{\"user\":{\"login\":\"maxandersen\",\"id\":54129,\"node_id\":\"MDQ6VXNlcjU0MTI5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/54129?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/maxandersen\",\"html_url\":\"https://github.com/maxandersen\",\"followers_url\":\"https://api.github.com/users/maxandersen/followers\",\"following_url\":\"https://api.github.com/users/maxandersen/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/maxandersen/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/maxandersen/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/maxandersen/subscriptions\",\"organizations_url\":\"https://api.github.com/users/maxandersen/orgs\",\"repos_url\":\"https://api.github.com/users/maxandersen/repos\",\"events_url\":\"https://api.github.com/users/maxandersen/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/maxandersen/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"version\":\"625c3698c5fb01a9cff9b3778019452023bd91ed\",\"committed_at\":\"2020-01-13T21:01:29Z\",\"change_status\":{\"total\":0,\"additions\":0,\"deletions\":0},\"url\":\"https://api.github.com/gists/590b8a0e824faeb3ee7ddfad741ce842/625c3698c5fb01a9cff9b3778019452023bd91ed\"},{\"user\":{\"login\":\"maxandersen\",\"id\":54129,\"node_id\":\"MDQ6VXNlcjU0MTI5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/54129?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/maxandersen\",\"html_url\":\"https://github.com/maxandersen\",\"followers_url\":\"https://api.github.com/users/maxandersen/followers\",\"following_url\":\"https://api.github.com/users/maxandersen/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/maxandersen/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/maxandersen/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/maxandersen/subscriptions\",\"organizations_url\":\"https://api.github.com/users/maxandersen/orgs\",\"repos_url\":\"https://api.github.com/users/maxandersen/repos\",\"events_url\":\"https://api.github.com/users/maxandersen/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/maxandersen/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"version\":\"c8a11df0db5fb5c5b38fb7001ae045dd3af76e82\",\"committed_at\":\"2020-01-13T21:00:26Z\",\"change_status\":{\"total\":96,\"additions\":96,\"deletions\":0},\"url\":\"https://api.github.com/gists/590b8a0e824faeb3ee7ddfad741ce842/c8a11df0db5fb5c5b38fb7001ae045dd3af76e82\"}],\"truncated\":false}",
    "headers" : {
      "X-RateLimit-Resource" : "core",
      "Server" : "github.com",
      "X-RateLimit-Used" : "2",
      "Access-Control-Allow-Origin" : "*",
      "X-Content-Type-Options" : "nosniff",
      "X-RateLimit-Reset" : "1745514514",
      "Last-Modified" : "Mon, 24 Mar 2025 22:19:44 GMT",
      "x-github-api-version-selected" : "2022-11-28",
      "Date" : "Thu, 24 Apr 2025 16:09:19 GMT",
      "Accept-Ranges" : "bytes",
      "Referrer-Policy" : "origin-when-cross-origin, strict-origin-when-cross-origin",
      "X-Frame-Options" : "deny",
      "Strict-Transport-Security" : "max-age=31536000; includeSubdomains; preload",
      "Access-Control-Expose-Headers" : "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset",
      "X-RateLimit-Remaining" : "58",
      "Cache-Control" : "public, max-age=60, s-maxage=60",
      "X-GitHub-Media-Type" : "unknown, github.v3",
      "ETag" : "W/\"2347aa0d88e7814e0ad679352e6274ad69b0c99aa3118a6b89de5e21f96fc5fa\"",
      "Content-Security-Policy" : "default-src 'none'",
      "Vary" : "Accept,Accept-Encoding, Accept, X-Requested-With",
      "X-RateLimit-Limit" : "60",
      "X-XSS-Protection" : "0",
      "X-GitHub-Request-Id" : "E723:34ED64:3636F98:3771445:680A622E",
      "Content-Type" : "application/json; charset=utf-8"
    }
  },
  "uuid" : "dc48d86b-4dce-4e77-9234-f40be8946bd0",
  "persistent" : true,
  "insertionIndex" : 10
}